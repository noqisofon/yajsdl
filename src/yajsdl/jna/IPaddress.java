package yajsdl.jna;

import com.sun.jna.Structure;


/**
 * <i>native declaration : /usr/include/SDL/SDL_net.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class IPaddress extends Structure {
	/**
	 * 32-bit IPv4 host address<br>
	 * C type : Uint32
	 */
	public int/* Uint32 */ host;
	/**
	 * 16-bit protocol port<br>
	 * C type : Uint16
	 */
	public short port;
	public IPaddress() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"host", "port"});
	}
	/**
	 * @param host 32-bit IPv4 host address<br>
	 * C type : Uint32<br>
	 * @param port 16-bit protocol port<br>
	 * C type : Uint16
	 */
	public IPaddress(int/* Uint32 */ host, short port) {
		super();
		this.host = host;
		this.port = port;
		initFieldOrder();
	}
	public static class ByReference extends IPaddress implements Structure.ByReference {
		
	};
	public static class ByValue extends IPaddress implements Structure.ByValue {
		
	};
}
