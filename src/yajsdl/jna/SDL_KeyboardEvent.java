package yajsdl.jna;
import com.sun.jna.Structure;
/**
 * <i>native declaration : /usr/include/SDL/SDL_events.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SDL_KeyboardEvent extends Structure {
	/**
	 * < SDL_KEYDOWN or SDL_KEYUP<br>
	 * C type : Uint8
	 */
	public byte type;
	/**
	 * < The keyboard device index<br>
	 * C type : Uint8
	 */
	public byte which;
	/**
	 * < SDL_PRESSED or SDL_RELEASED<br>
	 * C type : Uint8
	 */
	public byte state;
	/// C type : SDL_keysym
	public SDL_keysym keysym;
	public SDL_KeyboardEvent() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"type", "which", "state", "keysym"});
	}
	/**
	 * @param type < SDL_KEYDOWN or SDL_KEYUP<br>
	 * C type : Uint8<br>
	 * @param which < The keyboard device index<br>
	 * C type : Uint8<br>
	 * @param state < SDL_PRESSED or SDL_RELEASED<br>
	 * C type : Uint8<br>
	 * @param keysym C type : SDL_keysym
	 */
	public SDL_KeyboardEvent(byte type, byte which, byte state, SDL_keysym keysym) {
		super();
		this.type = type;
		this.which = which;
		this.state = state;
		this.keysym = keysym;
		initFieldOrder();
	}
	public static class ByReference extends SDL_KeyboardEvent implements Structure.ByReference {
		
	};
	public static class ByValue extends SDL_KeyboardEvent implements Structure.ByValue {
		
	};
}
