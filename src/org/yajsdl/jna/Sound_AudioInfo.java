package org.yajsdl.jna;

import com.sun.jna.Structure;


/**
 * <i>native declaration : /usr/include/SDL/SDL_sound.h</i><br>
 * This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that
 * <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a
 * few opensource projects.</a>.<br>
 * For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a
 * href="http://rococoa.dev.java.net/">Rococoa</a>, or <a
 * href="http://jna.dev.java.net/">JNA</a>.
 */
public class Sound_AudioInfo extends Structure {
    /**
     * < Equivalent of SDL_AudioSpec.format.<br>
     * C type : Uint16
     */
    public short format;
    /**
     * < Number of sound channels. 1 == mono, 2 == stereo.<br>
     * C type : Uint8
     */
    public byte  channels;
    /**
     * < Sample rate; frequency of sample points per second.<br>
     * C type : Uint32
     */
    public int   /* Uint32 */rate;


    public Sound_AudioInfo() {
        super();
        initFieldOrder();
    }


    protected void initFieldOrder() {
        setFieldOrder( new java.lang.String[] { "format", "channels", "rate" } );
    }


    /**
     * @param format
     *            < Equivalent of SDL_AudioSpec.format.<br>
     *            C type : Uint16<br>
     * @param channels
     *            < Number of sound channels. 1 == mono, 2 == stereo.<br>
     *            C type : Uint8<br>
     * @param rate
     *            < Sample rate; frequency of sample points per second.<br>
     *            C type : Uint32
     */
    public Sound_AudioInfo(short format, byte channels, int/* Uint32 */rate) {
        super();
        this.format = format;
        this.channels = channels;
        this.rate = rate;
        initFieldOrder();
    }

    public static class ByReference extends Sound_AudioInfo implements Structure.ByReference {

    };

    public static class ByValue extends Sound_AudioInfo implements Structure.ByValue {

    };
}
