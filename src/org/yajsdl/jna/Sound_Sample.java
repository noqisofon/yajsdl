package org.yajsdl.jna;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;


/**
 * <i>native declaration : /usr/include/SDL/SDL_sound.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class Sound_Sample extends Structure {
	/**
	 * < Internal use only. Don't touch.<br>
	 * C type : void*
	 */
	public Pointer opaque;
	/**
	 * < Decoder used for this sample.<br>
	 * C type : const Sound_DecoderInfo*
	 */
	public org.yajsdl.jna.Sound_DecoderInfo.ByReference decoder;
	/**
	 * < Desired audio format for conversion.<br>
	 * C type : Sound_AudioInfo
	 */
	public Sound_AudioInfo desired;
	/**
	 * < Actual audio format of sample.<br>
	 * C type : Sound_AudioInfo
	 */
	public Sound_AudioInfo actual;
	/**
	 * < Decoded sound data lands in here.<br>
	 * C type : void*
	 */
	public Pointer buffer;
	/**
	 * < Current size of (buffer), in bytes (Uint8).<br>
	 * C type : Uint32
	 */
	public int/* Uint32 */ buffer_size;
	/**
	 * < Flags relating to this sample.<br>
	 * C type : Sound_SampleFlags
	 */
	public int flags;
	public Sound_Sample() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"opaque", "decoder", "desired", "actual", "buffer", "buffer_size", "flags"});
	}
	/**
	 * @param opaque < Internal use only. Don't touch.<br>
	 * C type : void*<br>
	 * @param decoder < Decoder used for this sample.<br>
	 * C type : const Sound_DecoderInfo*<br>
	 * @param desired < Desired audio format for conversion.<br>
	 * C type : Sound_AudioInfo<br>
	 * @param actual < Actual audio format of sample.<br>
	 * C type : Sound_AudioInfo<br>
	 * @param buffer < Decoded sound data lands in here.<br>
	 * C type : void*<br>
	 * @param buffer_size < Current size of (buffer), in bytes (Uint8).<br>
	 * C type : Uint32<br>
	 * @param flags < Flags relating to this sample.<br>
	 * C type : Sound_SampleFlags
	 */
	public Sound_Sample(Pointer opaque, org.yajsdl.jna.Sound_DecoderInfo.ByReference decoder, Sound_AudioInfo desired, Sound_AudioInfo actual, Pointer buffer, int/* Uint32 */ buffer_size, int flags) {
		super();
		this.opaque = opaque;
		this.decoder = decoder;
		this.desired = desired;
		this.actual = actual;
		this.buffer = buffer;
		this.buffer_size = buffer_size;
		this.flags = flags;
		initFieldOrder();
	}
	public static class ByReference extends Sound_Sample implements Structure.ByReference {
		
	};
	public static class ByValue extends Sound_Sample implements Structure.ByValue {
		
	};
}
