package org.yajsdl.jna;
import com.sun.jna.Structure;
/**
 * <i>native declaration : /usr/include/SDL/SDL_events.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SDL_JoyHatEvent extends Structure {
	/**
	 * < SDL_JOYHATMOTION<br>
	 * C type : Uint8
	 */
	public byte type;
	/**
	 * < The joystick device index<br>
	 * C type : Uint8
	 */
	public byte which;
	/**
	 * < The joystick hat index<br>
	 * C type : Uint8
	 */
	public byte hat;
	/**
	 * < The hat position value:<br>
	 *   SDL_HAT_LEFTUP   SDL_HAT_UP       SDL_HAT_RIGHTUP<br>
	 *   SDL_HAT_LEFT     SDL_HAT_CENTERED SDL_HAT_RIGHT<br>
	 *   SDL_HAT_LEFTDOWN SDL_HAT_DOWN     SDL_HAT_RIGHTDOWN<br>
	 *  Note that zero means the POV is centered.<br>
	 * C type : Uint8
	 */
	public byte value;
	public SDL_JoyHatEvent() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"type", "which", "hat", "value"});
	}
	/**
	 * @param type < SDL_JOYHATMOTION<br>
	 * C type : Uint8<br>
	 * @param which < The joystick device index<br>
	 * C type : Uint8<br>
	 * @param hat < The joystick hat index<br>
	 * C type : Uint8<br>
	 * @param value < The hat position value:<br>
	 *   SDL_HAT_LEFTUP   SDL_HAT_UP       SDL_HAT_RIGHTUP<br>
	 *   SDL_HAT_LEFT     SDL_HAT_CENTERED SDL_HAT_RIGHT<br>
	 *   SDL_HAT_LEFTDOWN SDL_HAT_DOWN     SDL_HAT_RIGHTDOWN<br>
	 *  Note that zero means the POV is centered.<br>
	 * C type : Uint8
	 */
	public SDL_JoyHatEvent(byte type, byte which, byte hat, byte value) {
		super();
		this.type = type;
		this.which = which;
		this.hat = hat;
		this.value = value;
		initFieldOrder();
	}
	public static class ByReference extends SDL_JoyHatEvent implements Structure.ByReference {
		
	};
	public static class ByValue extends SDL_JoyHatEvent implements Structure.ByValue {
		
	};
}
