package org.yajsdl.jna;

import com.sun.jna.Structure;


/**
 * <i>native declaration : /usr/include/SDL/SDL_video.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SDL_PixelFormat extends Structure {
	/// C type : SDL_Palette*
	public org.yajsdl.jna.SDL_Palette.ByReference palette;
	/// C type : Uint8
	public byte BitsPerPixel;
	/// C type : Uint8
	public byte BytesPerPixel;
	/// C type : Uint8
	public byte Rloss;
	/// C type : Uint8
	public byte Gloss;
	/// C type : Uint8
	public byte Bloss;
	/// C type : Uint8
	public byte Aloss;
	/// C type : Uint8
	public byte Rshift;
	/// C type : Uint8
	public byte Gshift;
	/// C type : Uint8
	public byte Bshift;
	/// C type : Uint8
	public byte Ashift;
	/// C type : Uint32
	public int/* Uint32 */ Rmask;
	/// C type : Uint32
	public int/* Uint32 */ Gmask;
	/// C type : Uint32
	public int/* Uint32 */ Bmask;
	/// C type : Uint32
	public int/* Uint32 */ Amask;
	/**
	 * RGB color key information<br>
	 * C type : Uint32
	 */
	public int/* Uint32 */ colorkey;
	/**
	 * Alpha value information (per-surface alpha)<br>
	 * C type : Uint8
	 */
	public byte alpha;
	public SDL_PixelFormat() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"palette", "BitsPerPixel", "BytesPerPixel", "Rloss", "Gloss", "Bloss", "Aloss", "Rshift", "Gshift", "Bshift", "Ashift", "Rmask", "Gmask", "Bmask", "Amask", "colorkey", "alpha"});
	}
	public static class ByReference extends SDL_PixelFormat implements Structure.ByReference {
		
	};
	public static class ByValue extends SDL_PixelFormat implements Structure.ByValue {
		
	};
}
